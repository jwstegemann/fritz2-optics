buildscript {
    ext.kotlin_version = '1.3.61'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }

    allprojects {
        repositories {
            mavenLocal()
            jcenter()
        }
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

apply plugin: "maven-publish"
apply plugin: "com.jfrog.bintray"

repositories {
    mavenCentral()
    jcenter()
}

kotlin {
    jvm() // Creates a JVM target with the default name 'jvm'
    js()  // JS target named 'js'

    sourceSets {
        jvmMain {
            dependencies {
                implementation kotlin("stdlib-jdk8")
            }
        }

        jsMain {
            dependencies {
                implementation kotlin("stdlib-js")
            }
        }

        commonMain {
            dependencies {
                implementation kotlin("stdlib-common")
            }
        }
    }

}

bintray {
    user = 'jwstegemann'
    key = 'd45b1f0b8864caa26d99e5c4e522ec567dc79f71'
    pkg {
        repo = 'fritz2'
        name = 'optics-core'
        userOrg = 'jwstegemann'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/jwstegemann/fritz2-optics'
        version {
            name = '0.1'
            desc = 'fritz2-optics core'
            released  = new Date()
            vcsTag = 'v0.1'
        }
    }
}

// This specifies the publications to upload to bintray before doing the bintrayUpload gradle task.
//In the mpp configuration of one module after 1.3,
// it is not uploaded unless you explicitly specify artifacts in publications like this.
// It is not necessary to have the findAll part,
// [project name]-kotlinMultiplatformbut a directory containing only pom files will be uploaded, so it is better to exclude it.
bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "kotlinMultiplatform"
    }
}
